stages:
  - tagChecking
  - publishProtosToLocalMavenRepo
  - build
  - test
  - sonarqube
  - deploy

tag-checker:
  stage: tagChecking
  script:
    - python3 tag_checker.py $CI_COMMIT_TAG
  only:
    - tags

junit-portfolio:
  stage: test
  script:
    - cd portfolio
    - ./gradlew test

junit-identityprovider:
  stage: test
  script:
    - cd identityprovider
    - ./gradlew test

publish-protos-to-maven-local:
  stage: publishProtosToLocalMavenRepo
  script:
    - cd shared
    - ./gradlew clean
    - ./gradlew publishToMavenLocal

# builds all branches, except dev and master
branch-build:
  stage: build
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - cd ../portfolio
    - ./gradlew bootJar
  artifacts:
    paths:
      - identityprovider/build/libs
      - portfolio/build/libs
  except:
    - tags
    - master
    - dev

deploy-staging-identityprovider:
  stage: deploy
  variables:
    DEPLOY_TARGET: staging-identityprovider
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/staging-identityprovider/ || true
    - mkdir /home/gitlab-runner/staging-identityprovider/
    - cp -r ./build/libs /home/gitlab-runner/staging-identityprovider
    - cp ../runner/staging-identityprovider.sh /home/gitlab-runner/staging-identityprovider.sh
    # To persist environment variables
    - rm /home/gitlab-runner/$DEPLOY_TARGET-env.sh || true
    - bash ../runner/save-env.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET-env.sh
    - sudo systemctl restart $DEPLOY_TARGET
  artifacts:
    paths:
      - identityprovider/build/libs
  only:
    - dev

deploy-staging-portfolio:
  stage: deploy
  variables:
    DEPLOY_TARGET: staging-portfolio
  script:
    - cd portfolio
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/staging-portfolio/ || true
    - mkdir /home/gitlab-runner/staging-portfolio/
    - cp -r ./build/libs /home/gitlab-runner/staging-portfolio
    - cp ../runner/staging-portfolio.sh /home/gitlab-runner/staging-portfolio.sh
    # To persist environment variables
    - rm /home/gitlab-runner/$DEPLOY_TARGET-env.sh || true
    - bash ../runner/save-env.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET-env.sh
    - sudo systemctl restart $DEPLOY_TARGET
  artifacts:
    paths:
      - portfolio/build/libs
  only:
    - dev

deploy-production-identityprovider:
  stage: deploy
  variables:
    DEPLOY_TARGET: production-identityprovider
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/production-identityprovider/ || true
    - mkdir /home/gitlab-runner/production-identityprovider/
    - cp -r ./build/libs /home/gitlab-runner/production-identityprovider
    - cp ../runner/production-identityprovider.sh /home/gitlab-runner/production-identityprovider.sh
    # To persist environment variables
    - rm /home/gitlab-runner/$DEPLOY_TARGET-env.sh || true
    - bash ../runner/save-env.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET-env.sh
    - sudo systemctl restart $DEPLOY_TARGET
  artifacts:
    paths:
      - identityprovider/build/libs
  only:
    - tags
    - master

deploy-production-portfolio:
  stage: deploy
  variables:
    DEPLOY_TARGET: production-portfolio
  script:
    - cd portfolio
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/production-portfolio/ || true
    - mkdir /home/gitlab-runner/production-portfolio/
    - cp -r ./build/libs /home/gitlab-runner/production-portfolio
    - cp ../runner/production-portfolio.sh /home/gitlab-runner/production-portfolio.sh
    # To persist environment variables
    - rm /home/gitlab-runner/$DEPLOY_TARGET-env.sh || true
    - bash ../runner/save-env.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET.sh
    - chmod u+x /home/gitlab-runner/$DEPLOY_TARGET-env.sh
    - sudo systemctl restart $DEPLOY_TARGET
  artifacts:
    paths:
      - portfolio/build/libs
  only:
    - tags
    - master

# sonarqube-report:
#   stage: sonarqube
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script:
#     - cd identityprovider
#     - ./gradlew --debug sonarqube
#     - cd ../portfolio
#     - ./gradlew --debug sonarqube

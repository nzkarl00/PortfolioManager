plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
}

group = 'nz.ac.canterbury.seng302.team700'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "17"

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-web'

    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.0'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.0'

    // Hashing
    implementation 'org.mindrot:jbcrypt:0.4'

    implementation 'net.devh:grpc-spring-boot-starter:2.13.1.RELEASE' // GRPC server / client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0'
    implementation 'org.testng:testng:7.1.0'// Local package containing .proto files

    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1' // For Parameterized Tests


  // H2 Database dependencies
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'com.h2database:h2'

  // Cucumber dependencies
  testImplementation 'io.cucumber:cucumber-java:7.2.3'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy cucumber
}

configurations {
    cucumberRuntime {
    extendsFrom testImplementation
    }
}

task cucumber () {
  dependsOn assemble, testClasses
  doLast {
    javaexec {
      main = "io.cucumber.core.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.test.output
      args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
      }
    }
}

test {
    finalizedBy jacocoTestReport
}

jacoco {
  toolVersion = "0.8.7"
}

jacocoTestReport {
  reports {
    xml.enabled true
    xml.destination file("${buildDir}/jacoco/test-report.xml")
    csv.enabled false
    html.destination file("${buildDir}/jacoco/html")
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "team-700-identityprovider"
    property "sonar.projectName", "Team 700 Identity Provider"
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.host.url", "http://sonarqube.csse.canterbury.ac.nz:9000"
    property "sonar.login", "$System.env.SONAR_API_KEY"
  }
}

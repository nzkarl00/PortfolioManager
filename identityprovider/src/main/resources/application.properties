spring.application.name: identity-provider

grpc.server.port: 9002

#H2 Database Configuration

#Enables the H2 GUI console
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#
##First build the application, then go to http://localhost:8080/h2-console, copy and paste the url below and use the credentials specified below to log in
##Specifies the url to find the databases file
##:file: specifies option for file-based, non-volatile storage
#spring.datasource.url=jdbc:h2:file:./src/main/java/nz/ac/canterbury/seng302/identityprovider/model/database
#
##Credentials to supply to the H2 console
#spring.datasource.username=pass
#spring.datasource.password=pass
#
####
##Allows remote access of the H2 console
#spring.h2.console.settings.web-allow-others=true
#
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
##Disables Hibernate's automatic schema creation
#spring.jpa.hibernate.ddl-auto=none
#
#spring.datasource.driverClassName=org.h2.Driver
#
##Enables automatic execution of schema.sql and data.sql scripts
#spring.sql.init.mode=always
##spring.jpa.hibernate.ddl-auto:create-drop
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# enable the console and set the url to localhost:9000/h2-console
# you need to log in first to be able to view it! at localhost:9000/login
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.driverClassName=org.h2.Driver
# copy and paste the below URL into the console when you open it!
# the dot (.) is supposed to reference the working directory...
spring.datasource.url=jdbc:h2:file:./database/data
spring.h2.console.settings.web-allow-others=true
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.sql.init.mode=always
spring.jpa.hibernate.ddl-auto=create-drop

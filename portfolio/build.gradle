plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.3"
    id 'checkstyle'
}

group = 'nz.ac.canterbury.seng302.team700'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "17"

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'


    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE' // GRPC client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files

    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'

    // for end implementation testing
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.4.0'
    // https://mvnrepository.com/artifact/org.testng/testng
    implementation group: 'org.testng', name: 'testng', version: '7.6.0'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.7.0'



    // H2 database
    implementation 'com.h2database:h2:2.1.210'
    // Java Persistence API
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.4'
    // MariaDB
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.4'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    //    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.6.4'


    testImplementation 'org.mockito:mockito-inline'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.puppycrawl.tools:checkstyle:10.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Cucumber dependencies
    testImplementation 'io.cucumber:cucumber-java:7.2.3'
    testImplementation "io.cucumber:cucumber-junit:7.2.3"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy cucumber
}

def integrationTestTask = tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useTestNG()
}

configurations {
  cucumberRuntime {
    extendsFrom testImplementation
  }
}

task cucumber () {
  dependsOn assemble, testClasses
  doLast {
    javaexec {
      main = "io.cucumber.core.cli.Main"
      classpath = configurations.cucumberRuntime + sourceSets.test.output
      args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
    }
  }
}

test {
      finalizedBy jacocoTestReport
      testLogging {
          showExceptions true
          exceptionFormat "full"
      }
}

jacoco {
  toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        csv.required = false
        xml.required = true
        xml.destination = file("${buildDir}/jacoco/test-report.xml")
        html.required = true
        html.destination = file("${buildDir}/jacoco/html")
    }
}

sonarqube {
  properties {
    property "sonar.projectKey", "team-700-portfolio"
    property "sonar.projectName", "Team 700 Portfolio"
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.host.url", "https://sonarqube.csse.canterbury.ac.nz"
    property "sonar.login", "$System.env.SONAR_API_KEY"
  }
}
